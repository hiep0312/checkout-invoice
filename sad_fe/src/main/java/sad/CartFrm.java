/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sad;

import Util.Resources;
import Util.Utils;
import com.mashape.unirest.http.JsonNode;
import entity.Cart;
import entity.CartProduct;
import entity.CartProductKey;
import entity.Customer;
import entity.CustomerProductAdapter;
import entity.Product;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hiepd
 */
public class CartFrm extends javax.swing.JFrame {

    /**
     * Creates new form DiscoveryFrm
     */

    private Product selectedProduct;
    private final Customer customer;
    private Cart cart;
    ListSelectionListener currentListener;
    
    
    public CartFrm(Customer customer) {
        initComponents();
        this.customer = customer;
        fetchData();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    
    
    private void fetchData() {
        try {
            JsonNode json = Utils.getRequestParam(Utils.host + ":8089" + "/api/v1/cart/get", new HashMap<>() {{
                put("customerId", customer.getCustomerId());
            }});
//            System.out.println(json);
            cart = Utils.parseJsonToObject(json.toString(), Cart.class);
            setTableData(cart);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void setTableData(Cart cart) {

        
        DefaultTableModel model = (DefaultTableModel) cartTbl.getModel();
        model.setRowCount(0);
        cartTbl.getSelectionModel().removeListSelectionListener(currentListener);
//        DefaultTableModel model = new DefaultTableModel();
        List<Product> products = List.copyOf(cart.getProducts());
        for (Product product : cart.getProducts()) {
            int amount = cart.getAmount(product);

            Object[] row = {products.indexOf(product), product.getName(), Utils.formatMoney(product.getPrice()), amount, Utils.formatMoney(product.getPrice() * amount)};
            model.addRow(row);
        }

        currentListener = new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int row = cartTbl.getSelectedRow();
                try {
                    setInfo(products.get(row));
                    SpinnerModel sm = new SpinnerNumberModel(0, 0, (int)cartTbl.getValueAt(row, 3), 1);
                    removeSpinner.setModel(sm);
                    removeSpinner.setValue(0);
                } catch (Exception ignored) {

                }
            }
        };
        cartTbl.getSelectionModel().addListSelectionListener(currentListener);

    }
    
    private void setInfo(Product product) {
        selectedProduct = product;
        productName.setText(product.getName());
        productDescription.setText(product.getDescription());
        productBrand.setText(product.getBrand().getBrandName());

        Utils.setImage(icon, product.getImageUrl());
    }
    
    private void removeFromCart(CartProduct product) {
        Customer customer = Resources.getInstance().getCurrentCustomer();
        
        try {
            JsonNode node = Utils.postRequestParam(Utils.host + ":8089/api/v1/cart/removeproduct", new CustomerProductAdapter(customer, product));
            System.out.println("Removed: " + Utils.parseJsonToObject(node.toString(), Cart.class).toString());
            JOptionPane.showMessageDialog(this, "Remove to cart successfully");

            fetchData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cartTbl = new javax.swing.JTable();
        panel1 = new java.awt.Panel();
        productName = new java.awt.Label();
        icon = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productDescription = new javax.swing.JTextArea();
        checkoutBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        productBrand = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        removeFromCartBtn = new javax.swing.JButton();
        removeSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cartTbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cartTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Áo dài", "126.000 đ", "5", null}
            },
            new String [] {
                "STT", "Name", "Price", "Amount", "TotalPrice"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartTbl.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(cartTbl);
        if (cartTbl.getColumnModel().getColumnCount() > 0) {
            cartTbl.getColumnModel().getColumn(0).setResizable(false);
            cartTbl.getColumnModel().getColumn(1).setResizable(false);
            cartTbl.getColumnModel().getColumn(2).setResizable(false);
            cartTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        productName.setAlignment(java.awt.Label.CENTER);
        productName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        icon.setBackground(new java.awt.Color(0, 204, 255));

        jLabel2.setText("Description:");

        productDescription.setEditable(false);
        productDescription.setColumns(20);
        productDescription.setLineWrap(true);
        productDescription.setRows(5);
        jScrollPane2.setViewportView(productDescription);

        checkoutBtn.setText("Checkout");
        checkoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Brand:");

        productBrand.setEditable(false);
        productBrand.setColumns(20);
        productBrand.setRows(5);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(productBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(productName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(productBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(checkoutBtn)
                        .addGap(33, 33, 33))))
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cart");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        removeFromCartBtn.setText("Remove From Cart");
        removeFromCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromCartBtnActionPerformed(evt);
            }
        });

        removeSpinner.setModel(new javax.swing.SpinnerNumberModel());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(removeFromCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(removeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(392, 392, 392))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeFromCartBtn)
                    .addComponent(removeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void checkoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutBtnActionPerformed
        // TODO add your handling code here:
        new InvoiceFrm(cart).setVisible(true);
    }//GEN-LAST:event_checkoutBtnActionPerformed

    private void removeFromCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromCartBtnActionPerformed
        // TODO add your handling code here:
        if (selectedProduct == null) {
            JOptionPane.showMessageDialog(this, "Please choose product");
            return;
        }

        CartProduct cartProduct = new CartProduct(new CartProductKey("", selectedProduct.getProductId()), (int) removeSpinner.getValue());
        if (cartProduct.getAmount() <= 0) {
            JOptionPane.showMessageDialog(this, "Please choose quantity");
            return;
        }
        removeFromCart(cartProduct);
        
    }//GEN-LAST:event_removeFromCartBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartFrm(Resources.getInstance().getCurrentCustomer()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cartTbl;
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Panel panel1;
    private javax.swing.JTextArea productBrand;
    private javax.swing.JTextArea productDescription;
    private java.awt.Label productName;
    private javax.swing.JButton removeFromCartBtn;
    private javax.swing.JSpinner removeSpinner;
    // End of variables declaration//GEN-END:variables
}
